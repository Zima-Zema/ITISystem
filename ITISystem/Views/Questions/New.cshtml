@model ITISystem.ViewModel.QuestionViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (Model.QuestionObj.Question_id > 0)
{
    <h2>Edit Question</h2>
}
else
{
    <h2>New Question</h2>
}

@using (Html.BeginForm("Save","Questions",FormMethod.Post))
{
    @Html.ValidationSummary(true,"Fix Form")
    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Header)
        @Html.TextBoxFor(m => m.QuestionObj.Header, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Header)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Body)
        @Html.TextBoxFor(m => m.QuestionObj.Body, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Body)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Grade)
        @Html.TextBoxFor(m => m.QuestionObj.Grade, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Grade)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Answer_A)
        @Html.TextBoxFor(m => m.QuestionObj.Answer_A, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Answer_A)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Answer_B)
        @Html.TextBoxFor(m => m.QuestionObj.Answer_B, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Answer_B)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Answer_C)
        @Html.TextBoxFor(m => m.QuestionObj.Answer_C, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Answer_C)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Answer_D)
        @Html.TextBoxFor(m => m.QuestionObj.Answer_D, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Answer_D)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Answer_Model)
        @Html.DropDownListFor(m => m.QuestionObj.Answer_Model, new SelectList(Model.answers),"Select Answer", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Answer_Model)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.QuestionObj.Course_key)
        @Html.DropDownListFor(m => m.QuestionObj.Course_key, new SelectList(Model.CourseList, "Course_Id", "Name"), "Select Course", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.QuestionObj.Course_key)
    </div>

    @Html.HiddenFor(mm => mm.QuestionObj.Question_id)
    @Html.AntiForgeryToken()
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-default" })
    <input type="submit" value="Save" class="btn btn-success " />


}